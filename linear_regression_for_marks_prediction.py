# -*- coding: utf-8 -*-
"""Linear regression for marks prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ErRQERL_QbjbYiOo1amVK79Dtq3y5lVn
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model

data = {'hours' : [1,2,3,4,5,6,7,8,9,11,13,15,16.5,17,17.5,20,22,23,24],
        'marks' : [5,12,16,25,28,35,40,43,50,58,60,67,70,77,80,83,90,96,99]}

df = pd.DataFrame(data)
print(df)
df.shape

import seaborn as sns
from sklearn import model_selection
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

df.head()

df.describe()

df.corr()

import plotly.express as ex
ex.scatter(df,x = "hours",y = "marks",template = 'plotly_dark')

x = df.iloc[:,:-1]
y = df.iloc[:,1]

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.3,random_state = 0)

reg = LinearRegression()
reg.fit(x_train,y_train)

reg.score(x_train,y_train)

y_pred = reg.predict(x_test)

comparision = pd.DataFrame({'actual':y_test,'predicted':y_pred})
print(comparision)

from sklearn.metrics import mean_absolute_error
from sklearn.metrics import r2_score
mean_absolute_error(y_test,y_pred)

r2_score(y_test,y_pred)

x_axis = range(len(y_test))
x_axis

plt.plot(x_axis,y_test,label = 'original')
plt.plot(x_axis,y_pred,label = 'predicted')
plt.legend()
plt.show()

x = float(input())
m = reg.coef_
c = reg.intercept_
y = m*x + c
print(y)